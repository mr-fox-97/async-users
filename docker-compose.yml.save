version: '3'

services:
  postgres:
    profiles: [dev, tests]
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

    ports:
      - "5432:5432"
    networks:
      - network
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql


  python-dev:
    profiles: [dev]
    build:
      context: .
      dockerfile: Dockerfile
    
    ports:
      - "8000:8000"

    command: poetry run uvicorn src.users.api:api --port=8000 --host=0.0.0.0
      
    container_name: python
    restart: 
      on-failure

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - network
    volumes:
      - .:/app

  python-tests:
    profiles: [tests]
    build:
      context: .
      dockerfile: Dockerfile

    command: poetry run pytest
      
    container_name: python
    restart: 
      on-failure

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - network
    volumes:
      - .:/app
  
  pgadmin:
    profiles: [dev]
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.dev
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - network

networks:
    network:
        driver: bridge
